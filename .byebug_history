continue
C
c
@borrow.return_date.month
@borrow.due_date.month
@borrow.due_date.day
@borrow.return_date.day
(@borrow.return_date.day - @borrow.due_date.day)
(@borrow.return_date.day - @borrow.due_date)
(@borrow.return_date.to_i - @borrow.due_date.to_i)
(@borrow.return_date - @borrow.due_date).to_i
@borrow.return_date - @borrow.due_date
@borrow.return_date
c
@borrow.return_date.nil?
c
@borrow.return_date.nil?
c
@borrow
params[:due_date]
c
params[:borrow][:issue_date]
params[:borrow][:fine]
params[:borrow]
params
c
params[:borrow]
params
c
params[:fine]
params
@borrow.return_date.nil?
c
borrow_params
@borrow.return_date
fine
c
borrow_params
Borrow.find(params[:id])
@borrow.return_date
@borrow.return_date.nil?
  @borrow.update(fine: 0)
c
  @borrow.update(fine: 0)
   25:         @borrow.update(fine: 0)
@borrow.return_date.nil?
c
@borrow.return_date.nil?
c
@borrow.return_date.nil?
c
params[:return_date]
@borrow.return_date.nil?
c
@borrow.return_date.nil?
params
c
params[:due_date]
 params[:return_date]
c
borrow_params
params[:fine]
c
@borrow.return_date
@borrow
c
borrow_params
params
c
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).first.due_date
params[:return_date]
params
c
params[:book_id, :user_id]
params[:book_id]
c
params.require(:borrow)
params
c
params
c
borrow_params
c
params
borrow_params
Borrow.find(params[:id])
c
params
c
params[:borrow]
params
c
Borrow.find(params[:id])
params[:borrow][:book_id]
params[:borrow][book_id]
params[:borrow]
params
c
params[:id]
@borrow
params
borrow_params
params
c
params
c
f.text_field :book_id 
<%= f.text_field :book_id %>
@borrow
borrow_path(@borrow)
c
params[:id]
c
borrow_params
c
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).first
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).first.due_date
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).first.due_date.to_date
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).first
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).limit(1)
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).limit(1).first.due_date.to_date
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).limit(1).first.due_date.to_date)
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).limit(1).@borrows.first.due_date.to_date)
@borrows.first.due_date.to_date)
params
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).limit(1)
c
params
c
borrow_params
params[:id]
params[:user_id]
params[:book_id]
params
c
 Borrow.find(params[:id])
=> 42:     @borrow = Borrow.find(params[:id])
@borrow
c
borrows_issue_book_path
c
params
@borrow
c
@borrow
c
params
c
borrow_params
params
c
borrow_params
params[:issue_date]
params[:id]
params
c
Borrow.find(params[:id])
params[:id]
c
borrows_issue_book_path(:id => borrow)
borrow_path(:id => borrow)
borrow_path(borrow)
borrows_issue_book_path(borrow)
borrows_issue_book_path
c
borrows_issue_book_path
borrow
 borrows_issue_book_path(borrow)
c
params[:issue_book]
params[:book_id]
params[:id]
params
c
borrow_path(borrow)
c
borrow_path(borrow)
borrows_issue_book_path(borrow)
c
borrow_path(borrow)
borrows_issue_book_path(borrow)
c
params[borrow.id]
params[:id]
c
borrows_issue_book_path(borrow.id)
borrow.id
c
params[:id]
c
borrows_issue_book_path(borrow)
(Book.find(borrow.book_id).status != 'issued')
c
params[:id]
c
Borrow.where(book_id: book.id, user_id: current_user.id).empty?
Borrow.where(book_id: book.id, user_id: current_user.id)
book.status != 'issued'
c
Borrow.where(book_id: book.id)
Borrow.where(book_id: => 12)
Borrow.find(11)
book.id
c
@borrow.first.due_date
@borrow[:due_date]
@borrow.due_date
@borrow
c
borrow_params
Book.find(params[:book_id])
@book
@borrow
c
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).due_date
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
c
 @borrows.update(borrow_params)
 @borrows.first.update(borrow_params)
params[:return_date]
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
@borrows
params[:book_id]
c
Book.find(borrow.book_id).status.eql? 'issued' and borrow.user_id == current_user.id
Book.find(borrow.book_id).status.eql? 'issued' && borrow.user_id == current_user.id
Book.find(borrow.book_id).status.eql? 'issued'
borrow.user_id == current_user.id
Book.find(borrow.book_id).status.eql? 'issued' && borrow.user_id == current_user.id
c
current_user.id
current_user
current_user[:user_id]
current_user.map(&:user_id)
current_user.user_id
 borrow.user_id
current_user
borrow.user_id == current_user
borrow.user_id == current_user3
Book.find(borrow.book_id).status.eql? 'issued'
Book.find(borrow.book_id).status.eql? 'issued' && borrow.user_id == current_user3
c
=====================================================================
c
Book.search(title: params[:title] , author_id: params[:book][:author_id])
Book.where(title: params[:title] , author_id: params[:book][:author_id])
Book.where(title: params[:title] , author_id: params[book][:author_id])
Book.where(title: params[:title])
Book.last
params
Book.all
Book.where(:author_id => params[:book][:author_id]).map(&:title)
