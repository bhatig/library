c
@borrow.first.due_date
@borrow[:due_date]
@borrow.due_date
@borrow
c
borrow_params
Book.find(params[:book_id])
@book
@borrow
c
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]).due_date
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id]) Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
 Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
c
 @borrows.update(borrow_params)
 @borrows.first.update(borrow_params)
params[:return_date]
Borrow.where(user_id: params[:user_id]).where(book_id: params[:book_id])
@borrows
params[:book_id]
c
Book.find(borrow.book_id).status.eql? 'issued' and borrow.user_id == current_user.id
Book.find(borrow.book_id).status.eql? 'issued' && borrow.user_id == current_user.id
Book.find(borrow.book_id).status.eql? 'issued'
borrow.user_id == current_user.id
Book.find(borrow.book_id).status.eql? 'issued' && borrow.user_id == current_user.id
c
current_user.id
current_user
current_user[:user_id]
current_user.map(&:user_id)
current_user.user_id
 borrow.user_id
current_user
borrow.user_id == current_user
borrow.user_id == current_user3
Book.find(borrow.book_id).status.eql? 'issued'
Book.find(borrow.book_id).status.eql? 'issued' && borrow.user_id == current_user3
c
=====================================================================
c
Book.search(title: params[:title] , author_id: params[:book][:author_id])
Book.where(title: params[:title] , author_id: params[:book][:author_id])
Book.where(title: params[:title] , author_id: params[book][:author_id])
Book.where(title: params[:title])
Book.last
params
Book.all
Book.where(:author_id => params[:book][:author_id]).map(&:title)
Book.where(:author_id => params[:book][:author_id]).title
gk
gk =Book.where(:author_id => params[:book][:author_id])
c
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title])
Book.where(:author_id => params[:book][:author_id])
!params[:title].empty? and ! params[:book][:author_id].empty?
 params[:title].empty? and  ! params[:book][:author_id].empty?
!params[:title].empty? and  params[:book][:author_id].empty?
c
Book.search(params[:title], fields: [:title]).results.map(&:author_id)
Book.search(params[:title], fields: [:title]).results.pluck(:author_id)
Book.search(params[:title], fields: [:title]).results.author_id
Book.search(params[:title], fields: [:title]).results
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title]).results.pluck(:author_id)
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title]).results.author_id
c
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title]).results.pluck(:author_id)
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title]).results
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title])
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title]).author_id
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title])
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title]).pluck(:author_id)
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title])
Book.where(:author_id => params[:book][:author_id]).pluck(:author_id).search
Book.where(:author_id => params[:book][:author_id])
      @books = Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title])
!params[:title].empty? and ! params[:book][:author_id].empty?
c
params[:book][:author_id]
params[:book][:author_id].nil?
c
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title]).map(&:author_id)
Book.where(:author_id => params[:book][:author_id]).search(params[:title], fields: [:title])
Book.where(:author_id => params[:book][:author_id])
@books.search(params[:title], fields: [:title])
 !params[:title].empty? and ! params[:book][:author_id].nil?
 params[:title].empty? and  ! params[:book][:author_id].nil?
 !params[:title].empty? and  params[:book][:author_id].nil?
c
Book.where(:author_id => params[:book][:author_id])
c
Book.search(params[:book][:author_id], fields: [:author_id]).results
Book.search(params[:book][:author_id], fields: [:author_id]).result
Book.search(params[:book][:author_id], fields: [:author_id]).result.count
Book.search(params[:book][:author_id], fields: [:author_id])
!params[:title].empty? and ! params[:book][:author_id].nil?
!params[:title].empty? and  params[:book][:author_id].nil?
c
@books
params[:book][:author_id]
 params[:title].empty? and  ! params[:book][:author_id].nil?
!params[:title].empty? and  params[:book][:author_id].nil?
c
Book.search(params[:book][:author_id], fields: [:author_id])
 @books
c
params[:book][:author_id].nil?
params[:book][:author_id]
params[:book].author_id
params[:name]
params[:book]
params[:author_id]
params[author_id]
@book.author_id
c
params[:book]
params[:author_id]
params[:author_id].nil?
params[:title].empty?
c
params[:author_id]
params[:author_id].nil?
params[:title].empty?
c
params[:book].author_id
params[:book]
params[:author_id]
params[:title].empty?
params[:author_id].empty?
params[:author_id].nil?
c
authors.first.id
Author.search(params[:author], fields: [:name])
authors
params[:title].empty? and  !params[:author].empty?
 @books
c
Book.find(authors.first.id)
 authors
params[:title].empty? and !params[:author].empty?
!params[:title].empty? and params[:author].empty?
c
!params[:title].empty?
params[:title].empty?
params[:title].isempty?
params[:title].is_empty?
params[:title].empty?
not.params[:title].empty?
params[:title].empty?.not
params[:title].empty?
params[:author].empty?
params[:author]
params[:title]
parmas[:title]
params[:title].nil?
params[:author].nil? && params[:title].nil?
params[:title].not.nil?
params[:author].nil?
c
 @books
c
Book.search(params[:title], fields: [:title])
@items 
params[:title]
@items
item
c
items
Book.search(params[:title], fields: [:title]).map(&:id)
items 
item
c
=========================================================================
c
fields: [:title]
@books
params[:title]
c
cc
c
book.author.name
book.title
===============================
c
@borrow.pluck(:id)
@borrow
c
( params[:return_date] - @borrow.first.issue_date.to_date).to_i * 5
params[:return_date]
c
(Date.today - @borrow.first.issue_date.to_date) * 5
(Date.today+3 - @borrow.first.issue_date.to_date).to_i * 5
(Date.today - @borrow.first.issue_date.to_date).to_i * 5
(Date.today - @borrow.first.issue_date.to_date) * 5
@borrow.first.issue_date.to_date
(Date.today - @borrow.first.issue_date) * 5
(Date.today - @borrow.first.issue_date)
Date.today
params[:fine]
@borrow.first.issue_date
c
@borrow.first.issue_date
@borrow.first
@borrow
@borrow.issue_date
@borrow[:issue_date]
@book[:issue_date]
@book(:issue_date)
@book.issue_date
@borrow
@borrow.issue_date
c
@borrow
c
@borrow.book_id
c
params[:book_id]
c
borrow_path(borrow)
c
borrow
borrow_path
c
params
c
params
c
self.status
c
params.require(:book).permit(:id, :title, :edition, :price, :author_id, :status)
params[:status]
params(:status)
params
:status
exit
c
n
params
c
params
c
n
c
user_params
n
c
user_params
n
params
:rale_id
rale_id
c
